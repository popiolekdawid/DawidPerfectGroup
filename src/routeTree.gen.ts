/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PasswordImport } from './routes/password'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppAdminImport } from './routes/_app.admin'
import { Route as AppAccountImport } from './routes/_app.account'
import { Route as AppAlbumsIndexImport } from './routes/_app.albums.index'
import { Route as AppAlbumsAlbumIDImport } from './routes/_app.albums.$albumID'
import { Route as AppAccountConfirmImport } from './routes/_app.account.confirm'
import { Route as AppAlbumsAlbumIDPhotoIDImport } from './routes/_app.albums.$albumID.$photoID'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const AuthConfirmationLazyImport = createFileRoute('/_auth/confirmation')()
const AuthActivationLazyImport = createFileRoute('/_auth/activation')()
const AppAlbumsUploadLazyImport = createFileRoute('/_app/albums/upload')()
const AppAlbumsEditAlbumIDLazyImport = createFileRoute(
  '/_app/albums/edit/$albumID',
)()

// Create/Update Routes

const PasswordRoute = PasswordImport.update({
  path: '/password',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth.login.lazy').then((d) => d.Route))

const AuthConfirmationLazyRoute = AuthConfirmationLazyImport.update({
  path: '/confirmation',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.confirmation.lazy').then((d) => d.Route),
)

const AuthActivationLazyRoute = AuthActivationLazyImport.update({
  path: '/activation',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.activation.lazy').then((d) => d.Route),
)

const AppAdminRoute = AppAdminImport.update({
  path: '/admin',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountRoute = AppAccountImport.update({
  path: '/account',
  getParentRoute: () => AppRoute,
} as any)

const AppAlbumsIndexRoute = AppAlbumsIndexImport.update({
  path: '/albums/',
  getParentRoute: () => AppRoute,
} as any)

const AppAlbumsUploadLazyRoute = AppAlbumsUploadLazyImport.update({
  path: '/albums/upload',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app.albums.upload.lazy').then((d) => d.Route),
)

const AppAlbumsAlbumIDRoute = AppAlbumsAlbumIDImport.update({
  path: '/albums/$albumID',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountConfirmRoute = AppAccountConfirmImport.update({
  path: '/confirm',
  getParentRoute: () => AppAccountRoute,
} as any)

const AppAlbumsEditAlbumIDLazyRoute = AppAlbumsEditAlbumIDLazyImport.update({
  path: '/albums/edit/$albumID',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app.albums.edit.$albumID.lazy').then((d) => d.Route),
)

const AppAlbumsAlbumIDPhotoIDRoute = AppAlbumsAlbumIDPhotoIDImport.update({
  path: '/$photoID',
  getParentRoute: () => AppAlbumsAlbumIDRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/password': {
      id: '/password'
      path: '/password'
      fullPath: '/password'
      preLoaderRoute: typeof PasswordImport
      parentRoute: typeof rootRoute
    }
    '/_app/account': {
      id: '/_app/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppAccountImport
      parentRoute: typeof AppImport
    }
    '/_app/admin': {
      id: '/_app/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AppAdminImport
      parentRoute: typeof AppImport
    }
    '/_auth/activation': {
      id: '/_auth/activation'
      path: '/activation'
      fullPath: '/activation'
      preLoaderRoute: typeof AuthActivationLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/confirmation': {
      id: '/_auth/confirmation'
      path: '/confirmation'
      fullPath: '/confirmation'
      preLoaderRoute: typeof AuthConfirmationLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthImport
    }
    '/_app/account/confirm': {
      id: '/_app/account/confirm'
      path: '/confirm'
      fullPath: '/account/confirm'
      preLoaderRoute: typeof AppAccountConfirmImport
      parentRoute: typeof AppAccountImport
    }
    '/_app/albums/$albumID': {
      id: '/_app/albums/$albumID'
      path: '/albums/$albumID'
      fullPath: '/albums/$albumID'
      preLoaderRoute: typeof AppAlbumsAlbumIDImport
      parentRoute: typeof AppImport
    }
    '/_app/albums/upload': {
      id: '/_app/albums/upload'
      path: '/albums/upload'
      fullPath: '/albums/upload'
      preLoaderRoute: typeof AppAlbumsUploadLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/albums/': {
      id: '/_app/albums/'
      path: '/albums'
      fullPath: '/albums'
      preLoaderRoute: typeof AppAlbumsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/albums/$albumID/$photoID': {
      id: '/_app/albums/$albumID/$photoID'
      path: '/$photoID'
      fullPath: '/albums/$albumID/$photoID'
      preLoaderRoute: typeof AppAlbumsAlbumIDPhotoIDImport
      parentRoute: typeof AppAlbumsAlbumIDImport
    }
    '/_app/albums/edit/$albumID': {
      id: '/_app/albums/edit/$albumID'
      path: '/albums/edit/$albumID'
      fullPath: '/albums/edit/$albumID'
      preLoaderRoute: typeof AppAlbumsEditAlbumIDLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AppRoute: AppRoute.addChildren({
    AppAccountRoute: AppAccountRoute.addChildren({ AppAccountConfirmRoute }),
    AppAdminRoute,
    AppAlbumsAlbumIDRoute: AppAlbumsAlbumIDRoute.addChildren({
      AppAlbumsAlbumIDPhotoIDRoute,
    }),
    AppAlbumsUploadLazyRoute,
    AppAlbumsIndexRoute,
    AppAlbumsEditAlbumIDLazyRoute,
  }),
  AuthRoute: AuthRoute.addChildren({
    AuthActivationLazyRoute,
    AuthConfirmationLazyRoute,
    AuthLoginLazyRoute,
    AuthRegisterLazyRoute,
  }),
  PasswordRoute,
})

/* prettier-ignore-end */
